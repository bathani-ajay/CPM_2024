<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="com/tagic/gc/cpm/xslt/ReqLog.map" md5sum="7a8721b3c5d8d853f7ca48b15ba6df42" version="8.0.501" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM Graphical Data Mapping Editor.
*   Version 8.0.5.0
*
*   Mapping file:		ReqLog.map
*   Map declaration(s):	ReqLog
*   Input file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252FImpl-GcCpm%257DcpmSharedBO/message%3D%257Bhttp%253A%252F%252FImpl-GcCpmLibrary%252FGCIntegrationCPM%257DcpmGCProposalSyncRequestMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252FImpl-GcCpm%257DcpmSharedBO/message%3D%257Bhttp%253A%252F%252FImpl-AuditLibrary%252FAuditLoggingServices%257DupsertServiceLogRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xltxe="http://www.ibm.com/xmlns/prod/xltxe-j"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:str="http://exslt.org/strings"
    xmlns:exsl="http://exslt.org/common"
    xmlns:set="http://exslt.org/sets"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:math="http://exslt.org/math"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io7="http://Impl-GcCpm"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:in="wsdl.http://Impl-GcCpmLibrary/GCIntegrationCPM"
    xmlns:io="http://www.w3.org/2005/08/addressing"
    xmlns:io3="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:in2="http://Impl-GcCpmLibrary/GCIntegrationCPM"
    xmlns:io2="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io4="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:in3="http://Impl-GcCpmLibrary"
    xmlns:out2="http://Impl-AuditLibrary/AuditLoggingServices"
    xmlns:out3="http://NBHD"
    xmlns:out="wsdl.http://Impl-AuditLibrary/AuditLoggingServices"
    xmlns:Transform="com.tagic.hnb.Transform"
    xmlns:map="http://Impl-GcCpm/com/tagic/gc/cpm/xslt/ReqLog"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="date str exsl set fn math Transform map xltxe msl"
    version="2.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>
  <xltxe:java-extension prefix="Transform" class="com.tagic.hnb.Transform"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io4:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:ReqLog2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io4:smo" mode="map:ReqLog"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io4:smo" to "io4:smo".  -->
  <xsl:template match="io4:smo"  mode="map:ReqLog">
    <io4:smo>
      <context>
        <!-- a structural mapping: "context/shared"(cpmSharedBO) to "shared"(cpmSharedBO) -->
        <!-- variables for custom code -->
        <xsl:variable name="shared" select="context/shared"/>
        <xsl:variable name="cpmGCRequest1" select="body/in2:cpmGCProposalSync/cpmGCRequest"/>
        <xsl:call-template name="localShared_et_alToShared_789883686">
          <xsl:with-param name="shared" select="$shared"/>
          <xsl:with-param name="cpmGCRequest1" select="$cpmGCRequest1"/>
        </xsl:call-template>
      </context>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out:upsertServiceLogRequestMsg'"/>
        </xsl:attribute>
        <out2:upsertServiceLog>
          <serviceLogRequest>
            <!-- a simple data mapping: "body/in2:cpmGCProposalSync/cpmGCRequest/inputXML/PropGeneralProposalInformation_RelationshipType"(string) to "out3:caseNumber"(string) -->
            <xsl:if test="body/in2:cpmGCProposalSync/cpmGCRequest/inputXML/PropGeneralProposalInformation_RelationshipType">
              <xsl:element name="out3:caseNumber">
                <xsl:value-of select="body/in2:cpmGCProposalSync/cpmGCRequest/inputXML/PropGeneralProposalInformation_RelationshipType"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple mapping with no associated source:  to "out3:serviceType"(string) -->
            <xsl:element name="out3:serviceType">
              <xsl:text>OUT</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "out3:serviceName"(string) -->
            <xsl:element name="out3:serviceName">
              <xsl:text>/CPMInsurenceRestService/saveProposal</xsl:text>
            </xsl:element>
            <!-- a simple data mapping: "context/shared/traceLog"(string) to "out3:request"(string) -->
            <xsl:if test="context/shared/traceLog">
              <xsl:element name="out3:request">
                <xsl:value-of select="context/shared/traceLog"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple mapping with no associated source:  to "out3:createdBy"(string) -->
            <xsl:element name="out3:createdBy">
              <xsl:text>PACE</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "out3:targetSystem"(string) -->
            <xsl:element name="out3:targetSystem">
              <xsl:text>GC</xsl:text>
            </xsl:element>
            <!-- a simple mapping with no associated source:  to "out3:lob"(string) -->
            <xsl:element name="out3:lob">
              <xsl:text>NB</xsl:text>
            </xsl:element>
            <!-- a simple data mapping: "context/shared/itTicketNumber"(string) to "out3:ticketNumber"(string) -->
            <!-- variables for custom code -->
            <xsl:variable name="itTicketNumber" select="context/shared/itTicketNumber"/>
            <xsl:if test="fn:boolean($itTicketNumber) and $itTicketNumber != &apos;&apos;">
              <xsl:element name="out3:ticketNumber">
                <xsl:value-of select="context/shared/itTicketNumber"/>
              </xsl:element>
            </xsl:if>
          </serviceLogRequest>
        </out2:upsertServiceLog>
      </body>
    </io4:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io4:smo" to "io4:smo".  -->
  <xsl:template name="map:ReqLog2">
    <xsl:param name="smo"/>
    <context>
      <!-- a structural mapping: "$smo/context/shared"(cpmSharedBO) to "shared"(cpmSharedBO) -->
      <!-- variables for custom code -->
      <xsl:variable name="shared" select="$smo/context/shared"/>
      <xsl:variable name="cpmGCRequest1" select="$smo/body/in2:cpmGCProposalSync/cpmGCRequest"/>
      <xsl:call-template name="localShared_et_alToShared_789883686">
        <xsl:with-param name="shared" select="$shared"/>
        <xsl:with-param name="cpmGCRequest1" select="$cpmGCRequest1"/>
      </xsl:call-template>
    </context>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out:upsertServiceLogRequestMsg'"/>
      </xsl:attribute>
      <out2:upsertServiceLog>
        <serviceLogRequest>
          <!-- a simple data mapping: "$smo/body/in2:cpmGCProposalSync/cpmGCRequest/inputXML/PropGeneralProposalInformation_RelationshipType"(string) to "out3:caseNumber"(string) -->
          <xsl:if test="$smo/body/in2:cpmGCProposalSync/cpmGCRequest/inputXML/PropGeneralProposalInformation_RelationshipType">
            <xsl:element name="out3:caseNumber">
              <xsl:value-of select="$smo/body/in2:cpmGCProposalSync/cpmGCRequest/inputXML/PropGeneralProposalInformation_RelationshipType"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple mapping with no associated source:  to "out3:serviceType"(string) -->
          <xsl:element name="out3:serviceType">
            <xsl:text>OUT</xsl:text>
          </xsl:element>
          <!-- a simple mapping with no associated source:  to "out3:serviceName"(string) -->
          <xsl:element name="out3:serviceName">
            <xsl:text>/CPMInsurenceRestService/saveProposal</xsl:text>
          </xsl:element>
          <!-- a simple data mapping: "$smo/context/shared/traceLog"(string) to "out3:request"(string) -->
          <xsl:if test="$smo/context/shared/traceLog">
            <xsl:element name="out3:request">
              <xsl:value-of select="$smo/context/shared/traceLog"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple mapping with no associated source:  to "out3:createdBy"(string) -->
          <xsl:element name="out3:createdBy">
            <xsl:text>PACE</xsl:text>
          </xsl:element>
          <!-- a simple mapping with no associated source:  to "out3:targetSystem"(string) -->
          <xsl:element name="out3:targetSystem">
            <xsl:text>GC</xsl:text>
          </xsl:element>
          <!-- a simple mapping with no associated source:  to "out3:lob"(string) -->
          <xsl:element name="out3:lob">
            <xsl:text>NB</xsl:text>
          </xsl:element>
          <!-- a simple data mapping: "$smo/context/shared/itTicketNumber"(string) to "out3:ticketNumber"(string) -->
          <!-- variables for custom code -->
          <xsl:variable name="itTicketNumber" select="$smo/context/shared/itTicketNumber"/>
          <xsl:if test="fn:boolean($itTicketNumber) and $itTicketNumber != &apos;&apos;">
            <xsl:element name="out3:ticketNumber">
              <xsl:value-of select="$smo/context/shared/itTicketNumber"/>
            </xsl:element>
          </xsl:if>
        </serviceLogRequest>
      </out2:upsertServiceLog>
    </body>
  </xsl:template>

  <!-- This rule represents an element mapping: "shared" to "shared".  -->
  <xsl:template name="localShared_et_alToShared_789883686">
    <xsl:param name="shared"/>
    <xsl:param name="cpmGCRequest1"/>
    <shared>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'io7:cpmSharedBO'"/>
      </xsl:attribute>
      <!-- a simple data mapping: "$shared/auditPrimaryKey"(int) to "auditPrimaryKey"(int) -->
      <xsl:if test="$shared/auditPrimaryKey">
        <auditPrimaryKey>
          <xsl:value-of select="$shared/auditPrimaryKey"/>
        </auditPrimaryKey>
      </xsl:if>
      <!-- a simple data mapping: "$shared/itTicketNumber"(string) to "itTicketNumber"(string) -->
      <xsl:if test="$shared/itTicketNumber">
        <itTicketNumber>
          <xsl:value-of select="$shared/itTicketNumber"/>
        </itTicketNumber>
      </xsl:if>
      <!-- a simple data mapping: "$shared/loggingModule"(string) to "loggingModule"(string) -->
      <xsl:if test="$shared/loggingModule">
        <loggingModule>
          <xsl:value-of select="$shared/loggingModule"/>
        </loggingModule>
      </xsl:if>
      <!-- a simple data mapping: "$shared/traceLog"(string) to "traceLog"(string) -->
      <xsl:if test="$shared/traceLog">
        <traceLog>
          <xsl:value-of select="$shared/traceLog"/>
        </traceLog>
      </xsl:if>
    </shared>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::node()[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
